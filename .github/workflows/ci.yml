# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['*', series/*]
  push:
    branches: ['*', series/*]
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  PGP_SECRET: ${{ secrets.PGP_SECRET }}

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.6, 2.12.14, 3.0.1]
        java: [adopt@1.8, adopt@1.11, adopt@1.16]
        ci: [ciJVM, ciNodeJS, ciFirefox, ciChrome]
        exclude:
          - ci: ciNodeJS
            java: adopt@1.11
          - ci: ciNodeJS
            java: adopt@1.16
          - ci: ciFirefox
            java: adopt@1.11
          - ci: ciFirefox
            java: adopt@1.16
          - ci: ciChrome
            java: adopt@1.11
          - ci: ciChrome
            java: adopt@1.16
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Setup NodeJS v16
        if: matrix.ci == 'ciNodeJS'
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 16

      - name: Start scaffold server and static file server
        run: |
          ./scripts/scaffold_server.js &
          ./scripts/static_server.py &

      - name: Check that workflows are up to date
        run: sbt ++${{ matrix.scala }} githubWorkflowCheck

      - name: Check formatting
        if: matrix.scala != '3.0.1'
        run: sbt ++${{ matrix.scala }} '${{ matrix.ci }}' scalafmtCheckAll

      - name: Check headers
        run: 'sbt ++${{ matrix.scala }} ''${{ matrix.ci }}'' headerCheck test:headerCheck'

      - name: Compile
        run: 'sbt ++${{ matrix.scala }} ''${{ matrix.ci }}'' test:compile'

      - name: FastOptJS
        if: matrix.ci != 'ciJVM'
        run: 'sbt ++${{ matrix.scala }} ''${{ matrix.ci }}'' fastOptJS test:fastOptJS'

      - name: Check binary compatibility
        if: matrix.ci == 'ciJVM'
        run: sbt ++${{ matrix.scala }} '${{ matrix.ci }}' mimaReportBinaryIssues

      - name: Run tests
        run: sbt ++${{ matrix.scala }} '${{ matrix.ci }}' test

      - name: Build docs
        if: matrix.ci == 'ciJVM'
        run: sbt ++${{ matrix.scala }} '${{ matrix.ci }}' doc

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.14]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Import signing key
        run: echo $PGP_SECRET | base64 -d | gpg --import

      - run: git status

      - run: sbt ++${{ matrix.scala }} +publish

      - if: startsWith(github.ref, 'refs/tags/v')
        run: sbt ++${{ matrix.scala }} sonatypeBundleRelease

      - name: Setup Hugo
        run: |

          echo "$HOME/bin" > $GITHUB_PATH
          HUGO_VERSION=0.26 scripts/install-hugo

      
      - name: Publish website
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |

          eval "$(ssh-agent -s)"
          echo "$SSH_PRIVATE_KEY" | ssh-add -
          git config --global user.name "GitHub Actions CI"
          git config --global user.email "ghactions@invalid"
          sbt ++2.12.14 website/makeSite website/ghpagesPushSite

                

  website:
    name: Build website
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.14]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Setup Hugo
        run: |

          echo "$HOME/bin" > $GITHUB_PATH
          HUGO_VERSION=0.26 scripts/install-hugo

      
      - name: Build website
        run: sbt ++${{ matrix.scala }} website/makeSite

  docs:
    name: Build docs
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.14]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Setup Hugo
        run: |

          echo "$HOME/bin" > $GITHUB_PATH
          HUGO_VERSION=0.26 scripts/install-hugo

      
      - name: Build docs
        run: sbt ++${{ matrix.scala }} docs/makeSite

  scalafix:
    name: Scalafix
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.6, 2.12.14, 3.0.1]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Scalafix tests
        if: matrix.scala == '2.13.6'
        run: |
          cd scalafix
          sbt ci