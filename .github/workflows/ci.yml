# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['*']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.3, 2.12.12]
        java: [adopt@1.8, adopt@1.11, adopt@1.15]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache ivy2
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (generic)
        uses: actions/cache@v1
        with:
          path: ~/.coursier/cache/v1
          key: ${{ runner.os }}-generic-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (linux)
        if: contains(runner.os, 'linux')
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (macOS)
        if: contains(runner.os, 'macos')
        uses: actions/cache@v1
        with:
          path: ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (windows)
        if: contains(runner.os, 'windows')
        uses: actions/cache@v1
        with:
          path: ~/AppData/Local/Coursier/Cache/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache sbt
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check that workflows are up to date
        run: sbt ++${{ matrix.scala }} githubWorkflowCheck

      - name: Check formatting
        run: sbt ++${{ matrix.scala }} scalafmtCheckAll

      - name: Check headers
        run: 'sbt ++${{ matrix.scala }} headerCheck test:headerCheck'

      - name: Compile
        run: 'sbt ++${{ matrix.scala }} test:compile'

      - name: Check explicit dependencies
        run: sbt ++${{ matrix.scala }} unusedCompileDependenciesTest

      - name: Run tests
        run: sbt ++${{ matrix.scala }} test

      - name: Build docs
        run: sbt ++${{ matrix.scala }} doc

      - name: Setup Hugo
        run: |

          echo "$HOME/bin" > $GITHUB_PATH
          HUGO_VERSION=0.26 scripts/install-hugo

      
      - name: Build website
        if: startsWith(matrix.scala, '2.12.')
        run: sbt ++${{ matrix.scala }} website/makeSite

      - name: Build docs
        if: startsWith(matrix.scala, '2.12.')
        run: sbt ++${{ matrix.scala }} docs/makeSite

      - name: Compress target directories
        run: tar cf targets.tar json4s-jackson/target website/target examples/ember/target blaze-client/target server/target examples/target blaze-server/target scalatags/target scalafix/rules/target target argonaut/target examples/docker/target twirl/target docs/target laws/target scalafix/output/target tests/target prometheus-metrics/target servlet/target examples/tomcat/target examples/jetty/target testing/target ember-server/target json4s-native/target json4s/target scalafix/tests/target okhttp-client/target examples/blaze/target scalafix/input/target client/target blaze-core/target circe/target examples/war/target jetty-client/target ember-client/target tomcat/target boopickle/target jetty/target play-json/target async-http-client/target core/target scala-xml/target dsl/target dropwizard-metrics/target ember-core/target jawn/target bench/target project/target

      - name: Upload target directories
        uses: actions/upload-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.3]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache ivy2
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (generic)
        uses: actions/cache@v1
        with:
          path: ~/.coursier/cache/v1
          key: ${{ runner.os }}-generic-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (linux)
        if: contains(runner.os, 'linux')
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (macOS)
        if: contains(runner.os, 'macos')
        uses: actions/cache@v1
        with:
          path: ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (windows)
        if: contains(runner.os, 'windows')
        uses: actions/cache@v1
        with:
          path: ~/AppData/Local/Coursier/Cache/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache sbt
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Download target directories (2.13.3)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-2.13.3-${{ matrix.java }}

      - name: Inflate target directories (2.13.3)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.12.12)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-2.12.12-${{ matrix.java }}

      - name: Inflate target directories (2.12.12)
        run: |
          tar xf targets.tar
          rm targets.tar

      - uses: olafurpg/setup-gpg@v3

      - name: Release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        run: sbt ++${{ matrix.scala }} ci-release

      - name: Setup Hugo
        run: |

          echo "$HOME/bin" > $GITHUB_PATH
          HUGO_VERSION=0.26 scripts/install-hugo

      
      - name: Publish website
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |

          eval "$(ssh-agent -s)"
          echo "$SSH_PRIVATE_KEY" | ssh-add -
          git config --global user.name "GitHub Actions CI"
          git config --global user.email "ghactions@invalid"
          sbt ++2.12.12 website/makeSite website/ghpagesPushSite

                

      - name: Publish docs
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |

          eval "$(ssh-agent -s)"
          echo "$SSH_PRIVATE_KEY" | ssh-add -
          git config --global user.name "GitHub Actions CI"
          git config --global user.email "ghactions@invalid"
          sbt ++2.12.12 docs/makeSite docs/ghpagesPushSite

                