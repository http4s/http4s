# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [v*]

env:
  PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  SONATYPE_CREDENTIAL_HOST: ${{ secrets.SONATYPE_CREDENTIAL_HOST }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  PGP_SECRET: ${{ secrets.PGP_SECRET }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        scala: [3.1.1, 2.13.8]
        java: [temurin@8, temurin@11, temurin@17]
        project: [rootJS, rootJVM]
        exclude:
          - scala: 3.1.1
            java: temurin@11
          - scala: 3.1.1
            java: temurin@17
          - project: rootJS
            java: temurin@11
          - project: rootJS
            java: temurin@17
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@8)
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 8

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check that workflows are up to date
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' 'project /' githubWorkflowCheck

      - name: Check headers and formatting
        if: matrix.java == 'temurin@8'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' headerCheckAll scalafmtCheckAll 'project /' scalafmtSbtCheck

      - name: scalaJSLink
        if: matrix.project == 'rootJS'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' Test/scalaJSLinkerResult

      - name: Test
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' test

      - name: Check binary compatibility
        if: matrix.java == 'temurin@8'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' mimaReportBinaryIssues

      - name: Generate API documentation
        if: matrix.java == 'temurin@8'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' doc

      - name: Check Scalafix rules
        if: matrix.scala != '3.1.1'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' '${{ matrix.ci }}' 'scalafixAll --check'

      - name: Check unused compile dependencies
        if: matrix.java == 'temurin@8'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' unusedCompileDependenciesTest

      - name: Make target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        run: mkdir -p ember-core/js/target ember-server/js/target examples/ember-server-h2/target website/target examples/ember/target examples/ember-client-h2/target blaze-client/target server/jvm/target examples/target scalafix-internal/input/target blaze-server/target scalafix-internal/tests/target scalatags/target target examples/docker/target twirl/target .js/target docs/target laws/.jvm/target tests/jvm/target client/js/target tomcat-server/target prometheus-metrics/target scalafix-internal/output/target servlet/target examples/tomcat/target examples/jetty/target boopickle/.js/target testing/jvm/target core/js/target testing/js/target ember-server/jvm/target circe/.js/target okhttp-client/target laws/.js/target examples/blaze/target jawn/.js/target tests/js/target .jvm/target scalafix-internal/rules/target .native/target client/jvm/target blaze-core/target circe/.jvm/target dsl/.js/target examples/war/target jetty-client/target ember-client/jvm/target boopickle/.jvm/target play-json/target async-http-client/target core/jvm/target scala-xml/target dsl/.jvm/target dropwizard-metrics/target jetty-server/target node-serverless/target ember-core/jvm/target jawn/.jvm/target server/js/target ember-client/js/target bench/target project/target

      - name: Compress target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        run: tar cf targets.tar ember-core/js/target ember-server/js/target examples/ember-server-h2/target website/target examples/ember/target examples/ember-client-h2/target blaze-client/target server/jvm/target examples/target scalafix-internal/input/target blaze-server/target scalafix-internal/tests/target scalatags/target target examples/docker/target twirl/target .js/target docs/target laws/.jvm/target tests/jvm/target client/js/target tomcat-server/target prometheus-metrics/target scalafix-internal/output/target servlet/target examples/tomcat/target examples/jetty/target boopickle/.js/target testing/jvm/target core/js/target testing/js/target ember-server/jvm/target circe/.js/target okhttp-client/target laws/.js/target examples/blaze/target jawn/.js/target tests/js/target .jvm/target scalafix-internal/rules/target .native/target client/jvm/target blaze-core/target circe/.jvm/target dsl/.js/target examples/war/target jetty-client/target ember-client/jvm/target boopickle/.jvm/target play-json/target async-http-client/target core/jvm/target scala-xml/target dsl/.jvm/target dropwizard-metrics/target jetty-server/target node-serverless/target ember-core/jvm/target jawn/.jvm/target server/js/target ember-client/js/target bench/target project/target

      - name: Upload target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        uses: actions/upload-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.scala }}-${{ matrix.project }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.8]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@8)
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 8

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Download target directories (3.1.1, rootJS)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.1.1-rootJS

      - name: Inflate target directories (3.1.1, rootJS)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3.1.1, rootJVM)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.1.1-rootJVM

      - name: Inflate target directories (3.1.1, rootJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13.8, rootJS)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13.8-rootJS

      - name: Inflate target directories (2.13.8, rootJS)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13.8, rootJVM)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13.8-rootJVM

      - name: Inflate target directories (2.13.8, rootJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Import signing key
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE == ''
        run: echo $PGP_SECRET | base64 -di | gpg --import

      - name: Import signing key and strip passphrase
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE != ''
        run: |
          echo "$PGP_SECRET" | base64 -di > /tmp/signing-key.gpg
          echo "$PGP_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --import /tmp/signing-key.gpg
          (echo "$PGP_PASSPHRASE"; echo; echo) | gpg --command-fd 0 --pinentry-mode loopback --change-passphrase $(gpg --list-secret-keys --with-colons 2> /dev/null | grep '^sec:' | cut --delimiter ':' --fields 5 | tail -n 1)

      - run: git status

      - name: Publish
        run: sbt '++${{ matrix.scala }}' tlRelease

      - name: Publish website
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |

          eval "$(ssh-agent -s)"
          echo "$SSH_PRIVATE_KEY" | ssh-add -
          git config --global user.name "GitHub Actions CI"
          git config --global user.email "ghactions@invalid"
          sbt ++2.13.8 website/laikaSite website/ghpagesPushSite

                

  website:
    name: Build website
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.8]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build website
        run: sbt '++${{ matrix.scala }}' website/laikaSite

  docs:
    name: Build docs
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.8]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build docs
        run: sbt '++${{ matrix.scala }}' docs/mdoc docs/laikaSite

  scalafix:
    name: Scalafix
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.1.1, 2.13.8]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@8)
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 8

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Scalafix tests
        if: matrix.scala == '2.13.8'
        run: |
          cd scalafix
          sbt ci
